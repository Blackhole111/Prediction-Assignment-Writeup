I-) Getting the Data

DataFiles <- function(filesDirectory = "./") { 
       if (!file.exists(filesDirectory)) {
     dir.create(filesDirectory)
          }
       testUrl <- "http://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
       trainUrl <- "http://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
       trainFile <- "train.csv"
       testFile <- "test.csv"
   trainFilePath <- paste(filesDirectory, trainFile, sep = "/")
       testFilePath <- paste(filesDirectory, testFile, sep = "/")
        download.file(trainUrl, destfile = trainFilePath, method="curl")
        download.file(testUrl, destfile = testFilePath, method="curl")
        training <- read.csv(trainFilePath, na.strings=c("NA","#DIV/0!",""))
        testing <- read.csv(testFilePath, na.strings=c("NA","#DIV/0!",""))
}

require(caret)
require(lattice)
require(ggplot2)
require(rpart)
require(rpart.plot)
require(RColorBrewer)
require(rattle)
require(randomForest)

trainUrl <- "http://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"   
testUrl <- "http://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv" 
training <- read.csv(url(trainUrl), na.strings=c("NA","#DIV/0!",""))  
testing <- read.csv(url(testUrl), na.strings=c("NA","#DIV/0!",""))
set.seed(1300)  
inTrain <- createDataPartition(y=training$classe, p=0.7, list=FALSE)    
myTraining <- training[inTrain, ]; myTesting <- training[-inTrain, ]  
dim(myTraining); dim(myTesting) 
[1] 13737   160
[1] 5885  160
nzv <- nearZeroVar(myTraining)  
myTraining <- myTraining[, -nzv]  
myTesting <- myTesting[, -nzv]  
mostlyNA <- sapply(myTraining, function(x) mean(is.na(x))) > 0.95  
myTraining <- myTraining[, mostlyNA==F]  
myTesting <- myTesting[, mostlyNA==F]  
myTraining <- myTraining[, -(1:5)]  
myTesting <- myTesting[, -(1:5)]  
fitControl <- trainControl(method="cv", number=3, verboseIter=F)  
fit <- train(classe ~ ., data=myTraining, method="rf", trControl=fitControl)
fit$finalModel  

prediction <- predict(fit, newdata=myTesting)  
confusionMatrix(myTesting$classe, prediction)  
nzv <- nearZeroVar(training)  
training <- training[, -nzv]  
testing <- testing[, -nzv]  
mostlyNA <- sapply(training, function(x) mean(is.na(x))) > 0.95  
training <- training[, mostlyNA==F]  
testing <- testing[, mostlyNA==F]  
training <- training[, -(1:5)]  
testing <- testing[, -(1:5)] 
fitControl <- trainControl(method="cv", number=3, verboseIter=F)  
fit <- train(classe ~ ., data=training, method="rf", trControl=fitControl)  

prediction <- predict(fit, newdata=testing)  
prediction <- as.character(prediction)  
prediction <- predict(model2, testingset, type="class")
pml_write_files <- function(x) {  
        n <- length(x)  
        for(i in 1:n) {  
                filename <- paste0("problem_id_", i, ".txt")  
                write.table(x[i], file=filename, quote=F, row.names=F, col.names=F)  
        }  
}  
pml_write_files(prediction)



##  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
##  B  A  B  A  A  E  D  B  A  A  B  C  B  A  E  E  A  B  B  B 
## Levels: A B C D E
